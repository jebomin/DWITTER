{"ast":null,"code":"export default function parseDate(tdate) {\n  const created = new Date(Date.parse(tdate));\n  const now = new Date();\n  const diff = Math.floor((now - created) / 1000);\n\n  if (diff <= 1) {\n    return 'just now';\n  }\n\n  if (diff < 20) {\n    return diff + ' seconds ago';\n  }\n\n  if (diff < 40) {\n    return 'half a minute ago';\n  }\n\n  if (diff < 60) {\n    return 'less than a minute ago';\n  }\n\n  if (diff <= 90) {\n    return 'one minute ago';\n  }\n\n  if (diff <= 3540) {\n    return Math.round(diff / 60) + ' minutes ago';\n  }\n\n  if (diff <= 5400) {\n    return '1 hour ago';\n  }\n\n  if (diff <= 86400) {\n    return Math.round(diff / 3600) + ' hours ago';\n  }\n\n  if (diff <= 129600) {\n    return '1 day ago';\n  }\n\n  if (diff < 604800) {\n    return Math.round(diff / 86400) + ' days ago';\n  }\n\n  if (diff <= 777600) {\n    return '1 week ago';\n  }\n\n  const month = created.toLocaleDateString('default', {\n    month: 'long'\n  });\n  return `on ${month} ${created.getDate()}`;\n}","map":{"version":3,"sources":["C:/projects/DWITTER/client/src/util/date.js"],"names":["parseDate","tdate","created","Date","parse","now","diff","Math","floor","round","month","toLocaleDateString","getDate"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAT,CAAhB;AACA,QAAMI,GAAG,GAAG,IAAIF,IAAJ,EAAZ;AACA,QAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,GAAG,GAAGH,OAAP,IAAkB,IAA7B,CAAb;;AACA,MAAII,IAAI,IAAI,CAAZ,EAAe;AACb,WAAO,UAAP;AACD;;AACD,MAAIA,IAAI,GAAG,EAAX,EAAe;AACb,WAAOA,IAAI,GAAG,cAAd;AACD;;AACD,MAAIA,IAAI,GAAG,EAAX,EAAe;AACb,WAAO,mBAAP;AACD;;AACD,MAAIA,IAAI,GAAG,EAAX,EAAe;AACb,WAAO,wBAAP;AACD;;AACD,MAAIA,IAAI,IAAI,EAAZ,EAAgB;AACd,WAAO,gBAAP;AACD;;AACD,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAOC,IAAI,CAACE,KAAL,CAAWH,IAAI,GAAG,EAAlB,IAAwB,cAA/B;AACD;;AACD,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAO,YAAP;AACD;;AACD,MAAIA,IAAI,IAAI,KAAZ,EAAmB;AACjB,WAAOC,IAAI,CAACE,KAAL,CAAWH,IAAI,GAAG,IAAlB,IAA0B,YAAjC;AACD;;AACD,MAAIA,IAAI,IAAI,MAAZ,EAAoB;AAClB,WAAO,WAAP;AACD;;AACD,MAAIA,IAAI,GAAG,MAAX,EAAmB;AACjB,WAAOC,IAAI,CAACE,KAAL,CAAWH,IAAI,GAAG,KAAlB,IAA2B,WAAlC;AACD;;AACD,MAAIA,IAAI,IAAI,MAAZ,EAAoB;AAClB,WAAO,YAAP;AACD;;AACD,QAAMI,KAAK,GAAGR,OAAO,CAACS,kBAAR,CAA2B,SAA3B,EAAsC;AAAED,IAAAA,KAAK,EAAE;AAAT,GAAtC,CAAd;AACA,SAAQ,MAAKA,KAAM,IAAGR,OAAO,CAACU,OAAR,EAAkB,EAAxC;AACD","sourcesContent":["export default function parseDate(tdate) {\n  const created = new Date(Date.parse(tdate));\n  const now = new Date();\n  const diff = Math.floor((now - created) / 1000);\n  if (diff <= 1) {\n    return 'just now';\n  }\n  if (diff < 20) {\n    return diff + ' seconds ago';\n  }\n  if (diff < 40) {\n    return 'half a minute ago';\n  }\n  if (diff < 60) {\n    return 'less than a minute ago';\n  }\n  if (diff <= 90) {\n    return 'one minute ago';\n  }\n  if (diff <= 3540) {\n    return Math.round(diff / 60) + ' minutes ago';\n  }\n  if (diff <= 5400) {\n    return '1 hour ago';\n  }\n  if (diff <= 86400) {\n    return Math.round(diff / 3600) + ' hours ago';\n  }\n  if (diff <= 129600) {\n    return '1 day ago';\n  }\n  if (diff < 604800) {\n    return Math.round(diff / 86400) + ' days ago';\n  }\n  if (diff <= 777600) {\n    return '1 week ago';\n  }\n  const month = created.toLocaleDateString('default', { month: 'long' });\n  return `on ${month} ${created.getDate()}`;\n}\n"]},"metadata":{},"sourceType":"module"}