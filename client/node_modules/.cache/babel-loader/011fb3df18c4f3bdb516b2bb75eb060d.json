{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\DWITTER\\\\client\\\\src\\\\components\\\\TweetCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TweetCard = /*#__PURE__*/memo(_c = _s(({\n  tweet,\n  owner,\n  onDelete,\n  onUpdate,\n  onUsernameClick\n}) => {\n  _s();\n\n  const {\n    id,\n    username,\n    name,\n    url,\n    text,\n    createdAt\n  } = tweet;\n  const [editing, setEditing] = useState(false);\n\n  const onClose = () => setEditing(false);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        url: url,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-username\",\n          onClick: () => onUsernameClick(tweet),\n          children: [\"@\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-date\",\n          children: [\" \\xB7 \", parseDate(createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), editing && /*#__PURE__*/_jsxDEV(EditTweetForm, {\n          tweet: tweet,\n          onUpdate: onUpdate,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), owner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweet-action-btn\",\n        onClick: () => onDelete(id),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweet-action-btn\",\n        onClick: () => setEditing(true),\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\"));\n_c2 = TweetCard;\nexport default TweetCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TweetCard$memo\");\n$RefreshReg$(_c2, \"TweetCard\");","map":{"version":3,"sources":["C:/projects/DWITTER/client/src/components/TweetCard.jsx"],"names":["React","memo","useState","parseDate","Avatar","EditTweetForm","TweetCard","tweet","owner","onDelete","onUpdate","onUsernameClick","id","username","name","url","text","createdAt","editing","setEditing","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,SAAS,gBAAGL,IAAI,SACpB,CAAC;AAAEM,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA;AAApC,CAAD,KAA2D;AAAA;;AACzD,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,GAAtB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,MAA+CV,KAArD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMkB,OAAO,GAAG,MAAMD,UAAU,CAAC,KAAD,CAAhC;;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,GAAb;AAAkB,QAAA,IAAI,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAE,MAAMH,eAAe,CAACJ,KAAD,CAFhC;AAAA,0BAIIM,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,+BAAiCV,SAAS,CAACc,SAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA,oBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,gBATF,EAUGE,OAAO,iBACN,QAAC,aAAD;AACE,UAAA,KAAK,EAAEX,KADT;AAEE,UAAA,QAAQ,EAAEG,QAFZ;AAGE,UAAA,OAAO,EAAEU;AAHX;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAsBGZ,KAAK,iBACJ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACG,EAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAE,MAAMO,UAAU,CAAC,IAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA5CmB,kCAAtB;MAAMb,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\n\nconst TweetCard = memo(\n  ({ tweet, owner, onDelete, onUpdate, onUsernameClick }) => {\n    const { id, username, name, url, text, createdAt } = tweet;\n    const [editing, setEditing] = useState(false);\n    const onClose = () => setEditing(false);\n\n    return (\n      <li className='tweet'>\n        <section className='tweet-container'>\n          <Avatar url={url} name={name} />\n          <div className='tweet-body'>\n            <span className='tweet-name'>{name}</span>\n            <span\n              className='tweet-username'\n              onClick={() => onUsernameClick(tweet)}\n            >\n              @{username}\n            </span>\n            <span className='tweet-date'> · {parseDate(createdAt)}</span>\n            <p>{text}</p>\n            {editing && (\n              <EditTweetForm\n                tweet={tweet}\n                onUpdate={onUpdate}\n                onClose={onClose}\n              />\n            )}\n          </div>\n        </section>\n        {owner && (\n          <div className='tweet-action'>\n            <button className='tweet-action-btn' onClick={() => onDelete(id)}>\n              x\n            </button>\n            <button\n              className='tweet-action-btn'\n              onClick={() => setEditing(true)}\n            >\n              ✎\n            </button>\n          </div>\n        )}\n      </li>\n    );\n  }\n);\nexport default TweetCard;\n"]},"metadata":{},"sourceType":"module"}